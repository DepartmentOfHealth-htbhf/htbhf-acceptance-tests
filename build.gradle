buildscript {

    ext {
        junitVersion = '5.3.2'
        springVersion = '5.1.8.RELEASE'
        seleniumVersion = '3.141.59'
        chromedriverPath = '' // this variable is set by findChromedriver()
        cucumberVersion = '4.7.1'
    }

    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.14'
}
apply plugin: 'java'
sourceCompatibility = 1.11
targetCompatibility = 1.11

lombok {
    version = '1.18.4'
    sha256 = ""
}

repositories {
    jcenter()
    maven {
        url  "https://dl.bintray.com/departmentofhealth-htbhf/maven"
    }
}


configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    implementation "com.google.guava:guava:27.0.1-jre"
    implementation "org.springframework:spring-context:${springVersion}"
    implementation "org.springframework:spring-beans:${springVersion}"
    implementation "org.springframework.retry:spring-retry:1.2.4.RELEASE"
    implementation "uk.gov.dhsc.htbhf:htbhf-common-test:latest.release"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${junitVersion}"
    testImplementation "org.junit.platform:junit-platform-console:1.5.1"
    testImplementation "org.apache.velocity:velocity:1.7"
    testImplementation "org.apache.velocity:velocity-tools:2.0"
    testImplementation "org.apache.velocity:velocity-tools:2.0"
    testImplementation "org.mockito:mockito-junit-jupiter:2.23.4"

    testImplementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
    testImplementation "org.springframework:spring-test:${springVersion}"
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"
    testImplementation "org.assertj:assertj-core:3.13.2"
    testImplementation "com.github.tomakehurst:wiremock-jre8:2.24.1"
    testImplementation "org.apache.commons:commons-lang3:3.9"
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:2.9.9.3"
}

task findChromedriver(type: Exec) {
    commandLine './ci_scripts/chromedriver_version.sh'
    standardOutput = new ByteArrayOutputStream()
    ignoreExitValue true
    doLast {
        if (execResult.getExitValue() == 0) {
            project.ext.chromedriverPath = standardOutput.toString().trim()
        } else {
            def binDir = System.getenv("BIN_DIR") ?: "./bin"
            project.ext.chromedriverPath = "${binDir}/chromedriver"
        }
    }
}

test {
    dependsOn findChromedriver
    doFirst {
        println("Chromedriver path: ${project.ext.chromedriverPath}")
        println("Cucumber options: ${System.getProperty("cucumber.options")}")
        println("Feature Toggles: ${System.getenv("FEATURE_TOGGLES")}")
        systemProperty "webdriver.chrome.driver", "${project.ext.chromedriverPath}"
        systemProperty "cucumber.options", System.getProperty("cucumber.options")
    }
    filter {
        excludeTestsMatching "uk.gov.dhsc.htbhf.RunCompatibilityTests"
    }
    useJUnitPlatform()
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

task compatibility(type: JavaExec) {
    systemProperty "spring.profiles.active", "browserstack"
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
    main = "uk.gov.dhsc.htbhf.browserstack.BrowserStackLauncher"
    classpath sourceSets.test.runtimeClasspath
}
